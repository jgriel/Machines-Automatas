from automata.tm.mntm import MNTM

def main():
    mntm = MNTM(
        states={'qSS', 'qS', 'qEND', 'qH', 'qF', 'qL', 
                'qR', 'qR1', 'qR2', 'qR3', 'qR12', 'qR13', 'qR21', 'qR23', 'qR31', 'qR32', 'qRe1', 'qRe2', 'qRe3',
                'qD', 'qD1', 'qD2', 'qD3', 'qD12', 'qD22', 'qD32'},
        input_symbols={'A', 'B', 'C', 'D', 'E', 'F', '1', '2', '3', 'L', 'R', 'J', 'H'},
        tape_symbols={'A', 'B', 'C', 'D', 'E', 'F', '0', '1', '2', '3', 'L', 'R', 'J', 'H', '#', '_'},
        n_tapes=4,
        transitions={
            'qSS' : {
                ('L', '_', '_', '_'): [('qL', (('L', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # LABEL
                ('H', '_', '_', '_'): [('qH', (('H', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # ACCEPT
                ('F', '_', '_', '_'): [('qF', (('F', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # REJECT
                ('R', '_', '_', '_'): [('qR', (('R', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('D', '_', '_', '_'): [('qD', (('D', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # DECREMENT
            },
            'qS': {
                ('L', '#', '#', '#'): [('qL', (('L', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # LABEL
                ('H', '#', '#', '#'): [('qH', (('H', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # ACCEPT
                ('F', '#', '#', '#'): [('qF', (('F', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # REJECT
                ('R', '#', '#', '#'): [('qR', (('R', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('D', '#', '#', '#'): [('qD', (('D', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))], # DECREMENT
            },

            'qEND': {
                ('#', '#', '#', '#'): [('qS', (('#', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('#', '#', '_', '#'): [('qEND', (('#', 'N'), ('#', 'N'), ('_', 'L'), ('#', 'N')))],
                ('#', '#', '#', '_'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('_', 'L')))],
                ('#', '#', '_', '_'): [('qEND', (('#', 'N'), ('#', 'N'), ('_', 'L'), ('_', 'L')))],
                ('#', '_', '#', '#'): [('qEND', (('#', 'N'), ('_', 'L'), ('#', 'N'), ('#', 'N')))],
                ('#', '_', '_', '#'): [('qEND', (('#', 'N'), ('_', 'L'), ('_', 'L'), ('#', 'N')))],
                ('#', '_', '#', '_'): [('qEND', (('#', 'N'), ('_', 'L'), ('#', 'N'), ('_', 'L')))],
                ('#', '_', '_', '_'): [('qEND', (('#', 'N'), ('_', 'L'), ('_', 'L'), ('_', 'L')))],
                ('#', '0', '0', '0'): [('qEND', (('#', 'N'), ('0', 'L'), ('0', 'L'), ('0', 'L')))],
                ('#', '0', '0', '#'): [('qEND', (('#', 'N'), ('0', 'L'), ('0', 'L'), ('#', 'N')))],
                ('#', '0', '#', '0'): [('qEND', (('#', 'N'), ('0', 'L'), ('#', 'N'), ('0', 'L')))],
                ('#', '0', '#', '#'): [('qEND', (('#', 'N'), ('0', 'L'), ('#', 'N'), ('#', 'N')))],
                ('#', '#', '0', '0'): [('qEND', (('#', 'N'), ('#', 'N'), ('0', 'L'), ('0', 'L')))],
                ('#', '#', '0', '#'): [('qEND', (('#', 'N'), ('#', 'N'), ('0', 'L'), ('#', 'N')))],
                ('#', '#', '#', '0'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('0', 'L')))],
                ('#', '0', '0', '_'): [('qEND', (('#', 'N'), ('0', 'L'), ('0', 'L'), ('_', 'L')))],
                ('#', '0', '_', '0'): [('qEND', (('#', 'N'), ('0', 'L'), ('_', 'L'), ('0', 'L')))],
                ('#', '0', '_', '_'): [('qEND', (('#', 'N'), ('0', 'L'), ('_', 'L'), ('_', 'L')))],
                ('#', '_', '_', '0'): [('qEND', (('#', 'N'), ('_', 'L'), ('_', 'L'), ('0', 'L')))],
                ('#', '_', '0', '_'): [('qEND', (('#', 'N'), ('_', 'L'), ('0', 'L'), ('_', 'L')))],
                ('#', '_', '0', '0'): [('qEND', (('#', 'N'), ('_', 'L'), ('0', 'L'), ('0', 'L')))],

            },
            
            # LABEL
            'qL': {
                ('A', '#', '#', '#'): [('qEND', (('A', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('B', '#', '#', '#'): [('qEND', (('B', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('C', '#', '#', '#'): [('qEND', (('C', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('D', '#', '#', '#'): [('qEND', (('D', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('E', '#', '#', '#'): [('qEND', (('E', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('F', '#', '#', '#'): [('qEND', (('F', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
            },

            # Command R
            'qR': {
                ('1', '#', '#', '#'): [('qR1', (('1', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('2', '#', '#', '#'): [('qR1', (('2', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('3', '#', '#', '#'): [('qR1', (('3', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
            },

            'qR1': {
                ('2', '#', '#', '#'): [('qR12', (('2', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('3', '#', '#', '#'): [('qR13', (('3', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
            },

            'qR2': {
                ('1', '#', '#', '#'): [('qR21', (('1', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('3', '#', '#', '#'): [('qR23', (('3', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
            },

            'qR3': {
                ('1', '#', '#', '#'): [('qR31', (('1', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('2', '#', '#', '#'): [('qR32', (('2', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
            },

            # DECREMENT
            'qD': {
                ('1', '#', '#', '#'): [('qD1', (('1', 'R'), ('#', 'R'), ('#', 'N'), ('#', 'N')))],
                ('2', '#', '#', '#'): [('qD2', (('2', 'R'), ('#', 'N'), ('#', 'R'), ('#', 'N')))],
                ('3', '#', '#', '#'): [('qD3', (('3', 'R'), ('#', 'N'), ('#', 'N'), ('#', 'R')))],
            },

            'qD1': {
                ('#', '0', '#', '#'): [('qD1', (('#', 'N'), ('0', 'R'), ('#', 'N'), ('#', 'N')))],
                ('#', '_', '#', '#'): [('qD12', (('#', 'N'), ('_', 'L'), ('#', 'N'), ('#', 'N')))],
            },

            'qD2': {
                ('#', '#', '0', '#'): [('qD2', (('#', 'N'), ('#', 'N'), ('0', 'R'), ('#', 'N')))],
                ('#', '#', '_', '#'): [('qD22', (('#', 'N'), ('#', 'N'), ('_', 'L'), ('#', 'N')))],
            },

            'qD3': {
                ('#', '#', '#', '0'): [('qD3', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('0', 'R')))],
                ('#', '#', '#', '_'): [('qD32', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('_', 'L')))],
            },

            'qD12': {
                ('#', '#', '#', '#'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('#', '0', '#', '#'): [('qEND', (('#', 'N'), ('_', 'L'), ('#', 'N'), ('#', 'N')))],
            },

            'qD22': {
                ('#', '#', '#', '#'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('#', '#', '0', '#'): [('qEND', (('#', 'N'), ('#', 'R'), ('_', 'L'), ('#', 'N')))],
            },

            'qD32': {
                ('#', '#', '#', '#'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('#', 'N')))],
                ('#', '#', '#', '0'): [('qEND', (('#', 'N'), ('#', 'N'), ('#', 'N'), ('_', 'L')))],
            },

        },
        initial_state='qSS',
        blank_symbol='_',
        final_states={'qH'},
    )

    mntm.read_input("LA#D1#D2#D3#H").pop().print()


main()

